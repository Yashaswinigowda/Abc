
/*
  given an time array
        myArray = ["2018-05-10","2017-03-11","2016-03-14","2015-04-20","2014-06-15"];
  in this give the highest date and lowest date value.
*/

APPROACH 1:

 /* Converting it into milliseconds and
    creating it in a array of object formate
    so that can easy sort and written the string
 */

var myArray = ["2018-05-10","2017-03-11","2016-03-14","2015-04-20","2014-06-15"];
var dateMIli = [];
for(var i=0;i< myArray.length; i++){
	var dateString = new Date(myArray[i]).getTime();
  dateMIli.push({
  		key : [myArray[i]],
      value : dateString
     });
}

/* Comparing the given two object1
 * it is comparing with milliseconds of time
*/

function compFun(object1, object2){
	if(object1.value > object2.value)
   	return true;
   return false;
};

var last = dateMIli.length - 1;
dateMIli.sort(compFun);
console.log(dateMIli[0].key);
console.log(dateMIli[last].key);



APPROACH 2:

function minMaxDate(dateVals){
	var miLi = [];
  var maxMilliSeconds;
	for (var i =0; i<dateVals.length; i++){
  	miLi.push(new Date(dateVals[i]).getTime());
	}
   miLi.sort();
   maxMilliSeconds = miLi.length -1;
   console.log(maxMilliSeconds);
   const leastDate = miliSecondToDate(miLi[0]);
   const maxDate = miliSecondToDate(miLi [miLi.length -1]);
   return ([leastDate, maxDate]);
}

function miliSecondToDate(miliSecondVal){
	var date = new Date(miliSecondVal).toISOString();
  var dateFormate = date.split('T');  // as we required it back in 'yyyy-mm-dd' formate
  return dateFormate[0];
}

var myArr = ["2018-07-07", "2015-06-01", "2009-08-30"];

var values = minMaxDate(myArr);
console.log(values);
